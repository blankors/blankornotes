(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{336:function(t,a,s){"use strict";s.r(a);var r=s(25),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第4章-库存-inventory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第4章-库存-inventory"}},[t._v("#")]),t._v(" 第4章 库存 (Inventory)")]),t._v(" "),a("h2",{attrs:{id:"_4-1-价值链介绍-value-chain-introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-价值链介绍-value-chain-introduction"}},[t._v("#")]),t._v(" 4.1 价值链介绍 (Value Chain Introduction)")]),t._v(" "),a("p",[t._v("大多数组织都有一条由‘关键业务流程’构成的‘潜在价值链’。价值链确定了组织主要活动的自然、逻辑流程。例如，零售商向产品制造商发出采购订单。产品被送到零售商的仓库，在那里作为库存储存。然后再运送到单个商店，产品在商店里再次作为库存存放，直到消费者购买。图4-1展示了零售商价值链的这一部分。显然，从制造商直接发货到零售商店的产品会绕过仓储流程。")]),t._v(" "),a("div",{staticClass:"language-mermaid extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mermaid"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("graph")]),t._v(" TD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    A"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[制造商]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" B"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[发出采购订单]")]),t._v("\n    B "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" C"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[仓库接收货物]")]),t._v("\n    C "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" D"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[仓库产品库存]")]),t._v("\n    D "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" E"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[商店接收货物]")]),t._v("\n    E "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" F"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[商店产品库存]")]),t._v("\n    F "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" G"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[零售销售]")]),t._v("\n")])])]),a("p",[t._v("图4-1：零售商价值链的一部分")]),t._v(" "),a("p",[t._v("运营源系统Operational source systems通常在价值链的每个步骤中生成事务或快照。大多数分析型数据仓库/商业智能（DW/BI）系统的"),a("strong",[t._v("主要目标")]),t._v("是监控这些关键流程的绩效结果。由于每个流程在不同的时间间隔、以不同的粒度和维度生成独特的‘指标’，因此每个流程通常会生成一个或多个事实表。为此，价值链为企业DW/BI环境的整体数据架构提供了高层次的见解。我们将在本章后面的 “价值链集成” 部分进一步讨论这个话题。")]),t._v(" "),a("h2",{attrs:{id:"_4-2-库存模型-inventory-models"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-库存模型-inventory-models"}},[t._v("#")]),t._v(" 4.2 库存模型 (Inventory Models)")]),t._v(" "),a("p",[t._v("与此同时，我们将讨论几种‘互补’的库存模型。第一种是库存定期快照模型，在该模型中，产品库存水平会在‘固定间隔’进行测量，并作为单独的行记录在事实表中。随着时间的推移，这些定期快照行在维度模型中呈现为一系列数据层，就像地质层代表了长时间内沉积物的积累一样。接下来，我们将讨论第二种库存模型，在产品进出仓库的过程中，每一个影响库存水平的交易都会被记录下来。最后，在第三种模型中，我们将描述库存累积快照模型，即每次产品交付时，都会在事实表中插入一行记录，然后随着产品在仓库中的流转，该行会被更新。每个模型都讲述了不同的情况。对于某些分析需求，可能同时需要两个甚至三个模型。")]),t._v(" "),a("h3",{attrs:{id:"_4-2-1-库存周期快照-inventory-periodic-snapshot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-库存周期快照-inventory-periodic-snapshot"}},[t._v("#")]),t._v(" 4.2.1 库存周期快照 (Inventory Periodic Snapshot)")]),t._v(" "),a("p",[t._v("让我们回到零售案例研究。优化商店的库存水平对连锁企业的盈利能力有着"),a("strong",[t._v("重大影响")]),t._v("。确保在正确的时间、正确的商店有正确的产品，能最大程度减少缺货情况（产品在货架上无货可售），并降低整体库存持有成本。零售商希望按产品和商店分析每日库存水平。")]),t._v(" "),a("p",[t._v("现在是时候再次运用四步维度设计流程了。1我们感兴趣的分析业务流程是零售商店库存的定期快照。2运营库存系统提供的最细粒度的细节是每个商店中每种产品的每日库存。3从这个粒度声明中可以直接得出维度：日期、产品和商店。对于定期快照事实表来说，这种情况经常发生，因为你无法在事务的背景下表达粒度，所以需要列出维度[^]。在这个案例研究中，在这个粒度下没有其他描述性维度。例如，促销维度通常与产品流动相关，比如产品订购、接收或销售时，但与库存无关。")]),t._v(" "),a("p",[t._v("4最简单的库存视图只涉及一个事实：现有库存数量。这就产生了一个非常简洁的维度设计，如图4-2所示。")]),t._v(" "),a("p",[t._v("本案例研究中的‘日期维度表’与第3章中为零售商店销售开发的表相同。‘产品’和‘商店维度’可能会添加对库存分析有用的其他属性。例如，")]),t._v(" "),a("ul",[a("li",[t._v("假设每个产品的最小再订购数量或存储要求是常量且离散的描述符，那么产品维度可以添加这些列[^]。")]),t._v(" "),a("li",[t._v("如果某产品的最小再订购数量因商店而异，则不能将其作为产品维度属性。在商店维度中，你可能会添加属性来标识冷冻和冷藏存储面积。")])]),t._v(" "),a("p",[t._v("即使是像图4-2这样简单的模式也非常有用。如果对许多地点的许多产品频繁测量库存水平，就可以获得许多有价值的见解。然而，这个定期快照事实表面临着第3章的销售交易事实表没有的"),a("strong",[t._v("严重挑战")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("销售事实表的稀疏度比较合理，因为并非每个购物车都会购买每种产品。")]),t._v(" "),a("li",[t._v("另一方面，库存会生成‘密集’的快照表。\n"),a("ul",[a("li",[t._v("由于零售商努力避免缺货情况，可能每天每个商店的每种产品在事实表中都有一行记录。在这种情况下，你需要将"),a("u",[t._v("缺货时数量为零的测量值")]),t._v("作为明确的行包含在内。")]),t._v(" "),a("li",[t._v("对于一家在100家商店中库存有60,000种产品的杂货店零售商来说，每晚加载事实表时大约会插入600万行（60,000种产品×100家商店）。不过，由于每行宽度仅为14字节，每次加载事实表只会增加84MB的大小。")]),t._v(" "),a("li",[t._v("虽然在这种情况下数据量是可管理的，但某些定期快照的密集度可能需要做出一些"),a("strong",[t._v("妥协")]),t._v("。最明显的可能是随着时间推移减少快照频率。将最近60天的库存保持在每日粒度，然后对历史数据采用粒度较低的每周快照可能是可以接受的。这样，在3年期间，快照数量可以从1095个减少到总共208个；60个每日快照和148个每周快照应存储在两个单独的事实表中，因为它们的周期不同。")])])])]),t._v(" "),a("p",[a("strong",[t._v("半加性事实")]),t._v("\nSemi-Additive Facts\n我们在第3章中强调了事实可加性的重要性。在库存快照模式中，现有库存数量可以按产品或商店进行汇总，得出有效的总计。然而，库存水平在不同日期之间不可相加，因为它们代表的是某一时刻的水平或余额的快照。由于库存水平（以及所有形式的财务账户余额）"),a("u",[t._v("在某些维度上可加，但并非在所有维度上都可加")]),t._v("，我们将它们称为半加性事实。")]),t._v(" "),a("p",[t._v("如果你考虑自己的支票账户余额，库存余额事实的半加性就更容易理解了。")]),t._v(" "),a("ul",[a("li",[t._v("假设周一你的账户中有50美元。周二，余额保持不变。周三，你又存入50美元，所以余额现在是100美元。直到周末，该账户没有进一步的活动。")]),t._v(" "),a("li",[t._v("到了周五，你不能简单地把这一周的每日余额相加，然后宣称‘最终余额’是400美元（基于50 + 50 + 100 + 100 + 100）。")]),t._v(" "),a("li",[t._v("跨日期合并账户余额和库存水平最有用的方法是取平均值（在这个支票账户的例子中，平均余额为80美元）。你可能很熟悉银行在每月账户对账单中提到的日均余额。")])]),t._v(" "),a("p",[t._v("注意："),a("strong",[t._v("所有")]),t._v("记录静态水平的度量（库存水平、财务账户余额以及诸如室温之类的强度度量）本质上在日期维度以及可能的其他维度上是不可加的。在这些情况下，可以通过在时间段数量上取平均值来跨日期聚合度量。")]),t._v(" "),a("p",[t._v("不幸的是，你"),a("strong",[t._v("不能")]),t._v("使用SQL的AVG函数来计算随时间的平均值。该函数对查询收到的所有行取平均，而不仅仅是日期数量。例如，如果一个查询请求在七个日期内三个产品在四个商店中的平均库存（例如，某一地理区域内一个品牌在一周内的日均库存），SQL的AVG函数会将库存总和除以84（3个产品×4家商店×7个日期）。显然，正确的答案是将库存总和除以7，即每日时间段的数量。")]),t._v(" "),a("p",[t._v("OLAP产品提供了在多维数据集中定义聚合规则的能力，因此，如果数据是通过OLAP多维数据集部署的，像余额这样的半加性度量就不那么成问题了。")]),t._v(" "),a("p",[a("strong",[t._v("增强型库存事实")])]),t._v(" "),a("p",[t._v("Enhanced Inventory Facts")]),t._v(" "),a("p",[t._v("定期库存快照事实表中的简单视图能让你看到"),a("u",[t._v("库存水平的时间序列")]),t._v("。对于大多数库存分析而言，"),a("u",[t._v("仅有现有库存数量是不够的")]),t._v("。现有库存数量需要与其他事实结合使用，以衡量库存周转速度，并得出其他有趣的指标，如库存周转率和库存可供天数。")]),t._v(" "),a("p",[t._v("如果在每个事实行中添加已售数量（或者，对于仓库位置而言，等同于已发货数量），就可以计算库存周转率和库存可供天数。")]),t._v(" "),a("ul",[a("li",[t._v("对于每日库存快照，每日的‘库存周转率’计算方法是‘已售数量’除以‘现有库存数量’。在较长时间段（如一年）内，库存周转率是‘总已售数量’除以‘日均现有库存数量’。")]),t._v(" "),a("li",[t._v("库存可供天数的计算方法类似。在一段时间内，库存可供天数是‘期末现有库存数量’除以‘平均每日已售数量’ 。")])]),t._v(" "),a("p",[t._v("除了已售数量，库存分析师还对‘库存成本的扩展价值’extended value of the inventory at cost以及‘最新售价的价值’感兴趣。图4-3展示了经过补充后的初始定期快照。")]),t._v(" "),a("p",[t._v("请注意，现有库存数量是半加性的，但‘增强型定期快照’enhanced periodic snapshot中的其他度量都是完全可加的。")]),t._v(" "),a("ul",[a("li",[t._v("已售数量已汇总到快照的每日粒度。")]),t._v(" "),a("li",[t._v("估值列是扩展的、可加的金额。")]),t._v(" "),a("li",[t._v("在一些定期快照库存模式中，存储期初余额、库存变化量（delta）以及期末余额是很有用的。在这种情况下，余额同样是半加性的，而变化量在所有维度上都是完全可加的。")])]),t._v(" "),a("p",[t._v("定期快照是"),a("strong",[t._v("最常见")]),t._v("的库存模式nventory schema.。我们将简要讨论另外两种互补的视角，它们与刚刚设计的库存快照相互补充。为了换个角度，我们不再以‘零售商店库存’为例来描述这些模型，而是沿着价值链向上，讨论‘仓库中的库存’。")]),t._v(" "),a("p",[t._v("[^]:对于周期快照事实表而言，其特点是不能像事务事实表那样在事务的具体情境中去明确粒度（事务事实表的粒度可以基于每个事务来确定）。因为周期快照是在特定的时间间隔（如每日）对状态进行记录，不存在像事务那样一个个明确的行为事件来界定粒度，所以就需要通过列举出像日期、产品、商店这样的维度来确定表的粒度和分析的角度。也就是说，在这种情况下，通过列出这些维度来明确周期快照事实表所关注和记录数据的具体范围和细节程度 。")]),t._v(" "),a("p",[t._v("[^]: 假设一家电子产品零售商在构建产品维度表。对于一款型号为XYZ - 123的智能手机，其最小再订购数量始终为50台，这是一个固定的值，不会因每次订购情况不同而改变，并且50这个数值是明确、离散的，不是一个范围，所以可以将“最小再订购数量”作为一个列添加到产品维度表中，该列对应XYZ - 123这款产品的单元格值为50。 再比如该智能手机的存储要求是每100台需要占用1立方米的仓库空间，这也是一个固定且离散的描述。那么“存储要求”也可作为一列添加到产品维度表中，针对XYZ - 123产品的该列单元格可以记录为“每100台占1立方米”。通过这样添加列，产品维度表得到了增强，能为库存分析提供更丰富的信息 。")]),t._v(" "),a("p",[t._v("[^]: “extended value of the inventory at cost” 指的是按成本计算的库存扩展价值。结合选中内容可知。这里的 “extended value” 可理解为考虑了一定因素（如库存数量与成本的综合考量）后的扩展意义上的价值，而 “at cost” 明确了是从成本角度来计算该价值。")]),t._v(" "),a("h3",{attrs:{id:"_4-2-2-库存事务-inventory-transactions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-库存事务-inventory-transactions"}},[t._v("#")]),t._v(" 4.2.2 库存事务 (Inventory Transactions)")]),t._v(" "),a("p",[t._v("对库存业务流程进行建模的第二种方法是记录影响库存的每一笔事务。仓库中的库存事务可能包括以下内容：")]),t._v(" "),a("ul",[a("li",[t._v("接收产品。")]),t._v(" "),a("li",[t._v("将产品放入检验暂存区。")]),t._v(" "),a("li",[t._v("从检验暂存区释放产品。")]),t._v(" "),a("li",[t._v("由于检验不合格将产品退回供应商。")]),t._v(" "),a("li",[t._v("将产品放入货箱。")]),t._v(" "),a("li",[t._v("从货箱中取出产品。")]),t._v(" "),a("li",[t._v("包装产品以便发货。")]),t._v(" "),a("li",[t._v("将产品发货给客户。")]),t._v(" "),a("li",[t._v("从客户处接收产品。")]),t._v(" "),a("li",[t._v("将客户退回的产品重新放入库存。")]),t._v(" "),a("li",[t._v("从库存中移除产品。")])]),t._v(" "),a("p",[t._v("每笔库存事务都会确定日期、产品、仓库、供应商、事务类型，并且在大多数情况下，会有一个代表‘事务对库存数量影响’的单一数量。假设事实表的粒度是每笔库存事务一行，那么生成的模式如图4-4所示。")]),t._v(" "),a("p",[t._v("尽管事务事实表很简单，但它包含了反映单个库存操作的详细信息。事务事实表对于衡量特定事务类型的频率和时间安排"),a("strong",[t._v("很有用")]),t._v("，可以回答粒度较粗的定期快照无法回答的问题。")]),t._v(" "),a("p",[t._v("即便如此，将事务事实表作为"),a("u",[t._v("分析库存绩效的‘唯一’基础")]),t._v("并不实际。虽然从理论上讲，可以从已知的库存位置向前滚动所有可能的事务，以重建任意时刻的确切库存状况，但对于跨越日期、产品、仓库或供应商的广泛分析问题来说，这样做过于繁琐且不切实际。")]),t._v(" "),a("p",[t._v("注意：要记住，事务并非生活的全部。某种形式的快照表能提供对流程更全面的累积视图，通常能与事务事实表相互补充。")]),t._v(" "),a("p",[t._v("在结束对事务事实表的讨论之前，我们的示例假定，每一种对库存水平产生正面或负面影响的事务类型transaction type"),a("a",{attrs:{href:"%E6%B3%A8%E9%87%8A"}},[t._v("^4.2.2-1")]),t._v("都具有一致的维度，即：日期、产品、仓库、供应商和事务类型。我们认识到，在现实世界中，某些事务类型可能具有不同的维度。例如，货运商可能与仓库收货和发货事务相关联；客户信息则可能与发货和客户退货事务相关。如果事务的维度因事件而异，那么就"),a("strong",[t._v("应该")]),t._v("设计一系列相关的事实表，而不是将所有的库存事务都记录在单个事实表中。")]),t._v(" "),a("p",[t._v("注意：如果绩效度量具有不同的自然粒度或维度，它们很可能来自不同的流程，应该分别建模为不同的事实表。")]),t._v(" "),a("p",[t._v("“transaction type”指的是事务类型，在数据仓库和商业智能分析的语境中，它用于区分不同种类的业务事务。结合前面文本内容，主要围绕库存管理的业务场景，事务类型就是那些会对库存水平产生正面或负面影响的不同业务操作类别。")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("仓库收货")]),t._v("：这是一种事务类型，会使库存水平增加。当货物从供应商处运达仓库时，这就是一次仓库收货事务。它关联着日期（收货的时间）、产品（收到的具体货物）、仓库（货物存放的地点）、供应商（提供货物的一方）等维度信息。")]),t._v(" "),a("li",[a("strong",[t._v("发货")]),t._v("：属于会使库存水平降低的事务类型。当把产品从仓库发送给客户时，就发生了发货事务。除了日期、产品、仓库这些常见维度外，可能还会关联客户信息和货运商信息等。")]),t._v(" "),a("li",[a("strong",[t._v("客户退货")]),t._v("：同样会对库存水平产生正向影响，因为退回的产品会重新回到库存中。它也有其特定的相关维度，如客户信息、退货日期等。")])]),t._v(" "),a("p",[t._v("不同的事务类型有不同的业务含义和处理逻辑，通过对事务类型进行区分和记录，可以更细致地分析库存的变化情况，为企业的库存管理和决策提供有力支持。")]),t._v(" "),a("h3",{attrs:{id:"_4-2-3-库存累积快照-inventory-accumulating-snapshot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3-库存累积快照-inventory-accumulating-snapshot"}},[t._v("#")]),t._v(" 4.2.3 库存累积快照 (Inventory Accumulating Snapshot)")]),t._v(" "),a("p",[t._v("最后一种库存模型是累积快照。累积快照事实表"),a("strong",[t._v("用于")]),t._v("具有明确开始、明确结束以及其间可识别的里程碑的流程。在这种库存模型中，当特定产品在仓库收到时，会在事实表中插入一行。在该产品离开仓库之前，会在这一事实行上跟踪其处置情况。在本示例中，"),a("strong",[t._v("只有")]),t._v("当你能够可靠地区分不同批次收到的产品时，累积快照模型才可行；如果你通过产品序列号或批次号跟踪产品移动，这种模型也适用。")]),t._v(" "),a("p",[t._v("现在假设一批产品在仓库中的库存水平记录了一系列明确的事件或里程碑，如收货、检验、货箱存放和发货。如图4-5所示，‘包含众多日期和事实的库存累积快照事实表’看起来与‘事务型’或‘定期快照模式’有很大不同。")]),t._v(" "),a("div",{staticClass:"language-mermaid extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mermaid"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("erDiagram")]),t._v("\n    DATE_RECEIVED_DIMENSION "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("||--o{")]),t._v(" INVENTORY_RECEIPT_ACCUMULATING_FACT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"关联"')]),t._v("\n    DATE_INSPECTED_DIMENSION "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("||--o{")]),t._v(" INVENTORY_RECEIPT_ACCUMULATING_FACT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"关联"')]),t._v("\n    DATE_BIN_PLACEMENT_DIMENSION "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("||--o{")]),t._v(" INVENTORY_RECEIPT_ACCUMULATING_FACT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"关联"')]),t._v("\n    DATE_INITIAL_SHIPMENT_DIMENSION "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("||--o{")]),t._v(" INVENTORY_RECEIPT_ACCUMULATING_FACT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"关联"')]),t._v("\n    DATE_LAST_SHIPMENT_DIMENSION "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("||--o{")]),t._v(" INVENTORY_RECEIPT_ACCUMULATING_FACT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"关联"')]),t._v("\n    PRODUCT_DIMENSION "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("||--o{")]),t._v(" INVENTORY_RECEIPT_ACCUMULATING_FACT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"关联"')]),t._v("\n    WAREHOUSE_DIMENSION "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("||--o{")]),t._v(" INVENTORY_RECEIPT_ACCUMULATING_FACT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"关联"')]),t._v("\n    VENDOR_DIMENSION "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("||--o{")]),t._v(" INVENTORY_RECEIPT_ACCUMULATING_FACT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"关联"')]),t._v("\n    DATE_RECEIVED_DIMENSION "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        date_received_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(PK)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--")]),t._v(" 收货日期维度相关属性\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    DATE_INSPECTED_DIMENSION "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        date_inspected_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(PK)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--")]),t._v(" 检验日期维度相关属性\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    DATE_BIN_PLACEMENT_DIMENSION "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        date_bin_placement_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(PK)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--")]),t._v(" 货箱存放日期维度相关属性\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    DATE_INITIAL_SHIPMENT_DIMENSION "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        date_initial_shipment_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(PK)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--")]),t._v(" 首次发货日期维度相关属性\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    DATE_LAST_SHIPMENT_DIMENSION "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        date_last_shipment_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(PK)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--")]),t._v(" 末次发货日期维度相关属性\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    PRODUCT_DIMENSION "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        product_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(PK)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--")]),t._v(" 产品维度相关属性\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    WAREHOUSE_DIMENSION "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        warehouse_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(PK)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--")]),t._v(" 仓库维度相关属性\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    VENDOR_DIMENSION "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        vendor_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(PK)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--")]),t._v(" 供应商维度相关属性\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    INVENTORY_RECEIPT_ACCUMULATING_FACT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        product_lot_receipt_number "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(DD)")]),t._v("\n        date_received_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(FK)")]),t._v("\n        date_inspected_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(FK)")]),t._v("\n        date_bin_placement_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(FK)")]),t._v("\n        date_initial_shipment_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(FK)")]),t._v("\n        date_last_shipment_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(FK)")]),t._v("\n        product_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(FK)")]),t._v("\n        warehouse_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(FK)")]),t._v("\n        vendor_key "),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("(FK)")]),t._v("\n        quantity_received\n        quantity_inspected\n        quantity_placed_in_bin\n        quantity_returned_to_vendor\n        quantity_shipped_to_customer\n        quantity_returned_by_customer\n        quantity_returned_to_inventory\n        quantity_damaged\n        receipt_to_inspected_lag\n        receipt_to_bin_placement_lag\n        receipt_to_initial_shipment_lag\n        initial_to_last_shipment_lag\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("图4-5：仓库库存累积快照")]),t._v(" "),a("p",[t._v("累积快照事实表会在一批货物经历moves through由多个日期值外键所代表的标准里程碑时 standard milestones represented by multiple date-valued foreign keys，提供该批货物的最新状态信息an updated status of the lot[^4.2.3-1]。每一行累积快照事实表中的数据都会被反复‘更新’，直到"),a("u",[t._v("一批中收到的产品")]),t._v("从仓库中完全出库为止，如图4-6所示。")]),t._v(" "),a("div",{staticClass:"language-mermaid extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mermaid"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sequenceDiagram")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("participant")]),t._v(" 系统 as S\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("participant")]),t._v(" 库存管理 as I\n    S"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("->>")]),t._v("I"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 产品批次收货，插入事实表行，记录收货信息\n    I"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("->>")]),t._v("I"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 产品批次检验，更新事实表行，记录检验日期及相关时间间隔\n    I"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("->>")]),t._v("I"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 产品批次放入货箱，更新事实表行，记录货箱存放日期及相关时间间隔\n")])])]),a("p",[t._v("图4-6：累积快照事实行的演变")]),t._v(" "),a("p",[t._v("[^4.2.3-1]: “lot” 理解为 “一批（货物）” 比较合适。")]),t._v(" "),a("h2",{attrs:{id:"_4-3-事实表类型-fact-table-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-事实表类型-fact-table-types"}},[t._v("#")]),t._v(" 4.3 事实表类型 (Fact Table Types)")]),t._v(" "),a("p",[t._v("事实表仅有三种基本类型：事务型、周期快照型和累积快照型。令人惊讶的是，"),a("strong",[t._v("无论")]),t._v("处于哪个行业，这种简单的模式都适用。这三种类型都有其作用；通常需要两个互补的事实表才能全面了解业务情况，然而这三种事实表的管理方式和更新节奏却大不相同。图4-7对它们的差异进行了比较和对比。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("事务型")]),t._v(" "),a("th",[t._v("周期快照型")]),t._v(" "),a("th",[t._v("累积快照型")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("周期性")]),t._v(" "),a("td",[t._v("离散的事务时间点")]),t._v(" "),a("td",[t._v("在规则、可预测的时间间隔进行重复快照")]),t._v(" "),a("td",[t._v("不断演变的流程/工作流的不确定时间跨度")])]),t._v(" "),a("tr",[a("td",[t._v("粒度")]),t._v(" "),a("td",[t._v("每个事务或事务行1行")]),t._v(" "),a("td",[t._v("每个快照周期加其他维度1行")]),t._v(" "),a("td",[t._v("每个流程实例1行")])]),t._v(" "),a("tr",[a("td",[t._v("日期维度")]),t._v(" "),a("td",[t._v("事务日期")]),t._v(" "),a("td",[t._v("快照日期")]),t._v(" "),a("td",[t._v("流程关键里程碑的多个日期")])]),t._v(" "),a("tr",[a("td",[t._v("事实")]),t._v(" "),a("td",[t._v("事务绩效")]),t._v(" "),a("td",[t._v("时间间隔内的累积绩效")]),t._v(" "),a("td",[t._v("流程实例的绩效")])]),t._v(" "),a("tr",[a("td",[t._v("事实表稀疏度")]),t._v(" "),a("td",[t._v("稀疏或密集，取决于活动情况")]),t._v(" "),a("td",[t._v("可预测的密集")]),t._v(" "),a("td",[t._v("稀疏或密集，取决于流程实例")])]),t._v(" "),a("tr",[a("td",[t._v("事实表更新")]),t._v(" "),a("td",[t._v("除非纠错，否则不更新")]),t._v(" "),a("td",[t._v("除非纠错，否则不更新")]),t._v(" "),a("td",[t._v("每当流程活动发生时更新")])])])]),t._v(" "),a("p",[t._v("图4-7：事实表类型比较")]),t._v(" "),a("h3",{attrs:{id:"_4-3-1-事务事实表-transaction-fact-tables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-事务事实表-transaction-fact-tables"}},[t._v("#")]),t._v(" 4.3.1 事务事实表 (Transaction Fact Tables)")]),t._v(" "),a("p",[t._v("对企业运营"),a("u",[t._v("最基本的观察视角")]),t._v("是在单个事务或事务行层面。这些事实表代表在某个瞬间发生的事件。只有当事务事件发生时，事实表中才会存在与特定客户或产品相关的行。相反，一个给定的客户或产品很可能会关联到事实表中的多行，因为理想情况下，该客户或产品会参与不止一项事务hopefully the customer or product is involved in more than one transaction。")]),t._v(" "),a("p",[t._v("事务数据很容易纳入到维度框架中。原子事务数据是最自然的维度数据，它能让你极为细致地分析行为。一旦某一事务被记录到事实表中，"),a("strong",[t._v("通常")]),t._v("你就不会再去修改它了。")]),t._v(" "),a("p",[t._v("在充分阐述了事务细节的魅力之后，你可能会想，自己只需要一台强大且运行快速的服务器来处理那些繁杂的事务细枝末节，这样工作就完成了。但遗憾的是，即便拥有事务层面的数据，仍然存在一些业务问题，仅靠这些细节是难以解答的。正如前面所提到的，你不能仅仅依赖事务数据。")]),t._v(" "),a("h3",{attrs:{id:"_4-3-2-周期快照事实表-periodic-snapshot-fact-tables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-周期快照事实表-periodic-snapshot-fact-tables"}},[t._v("#")]),t._v(" 4.3.2 周期快照事实表 (Periodic Snapshot Fact Tables)")]),t._v(" "),a("p",[t._v("周期性快照用于观察企业在"),a("strong",[t._v("规律、可预测的时间间隔")]),t._v("内的累计业务表现。与事务事实表不同，事务事实表中每发生一个事件就会载入一行数据，而周期快照则是在一天、一周或一个月结束时对业务活动“拍一张照片”（这就是“快照”这一术语的由来），然后在下一个周期结束时再拍一张，依此类推。这些周期快照会连续堆叠到事实表中。定期快照事实表往往是"),a("strong",[t._v("唯一")]),t._v("能够轻松获取关于长期表现趋势的规律、可预测视图的地方a regular, predictable view of longitudinal performance trends。")]),t._v(" "),a("p",[t._v("当交易等同于小额收入时When transactions equate to little pieces of revenue，你只需将各个交易金额相加，就可以轻松地从单个交易数据得出每日快照数据。在这种情况下，定期快照代表了一个时间段内发生的交易活动的汇总；"),a("strong",[t._v("只有")]),t._v("出于性能方面的考虑有必要时，你才会创建这样的快照。在这种情形下，快照表的设计与其对应的事务表的设计密切相关。这些事实表共享许多维度表；总体而言，快照表通常包含的‘维度’较少。相反，经过汇总的定期快照表中的‘事实’通常比事务表中的更多，因为在该时间段内发生的‘任何’活动都可作为定期快照中的一个度量指标。")]),t._v(" "),a("p",[t._v("然而，在许多企业中，事务细节并不容易汇总以呈现管理绩效指标。正如在这个库存案例研究中看到的，"),a("strong",[t._v("梳理事务极其耗时")]),t._v("，而且就算你能够获取所需的历史数据，要解读不同类型的交易对库存水平产生的影响，其中所需的逻辑也可能会异常复杂。周期快照再次发挥作用，为管理层提供库存水平的快速、灵活视图。但愿用于这个快照模式的数据能直接取自处理这些复杂计算的业务操作系统。如果不是这样，抽取、转换和加载（ETL）系统就还必须执行这一复杂的逻辑，以便正确解读每种交易类型的影响。")]),t._v(" "),a("h3",{attrs:{id:"_4-3-3-累积快照事实表-accumulating-snapshot-fact-tables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-3-累积快照事实表-accumulating-snapshot-fact-tables"}},[t._v("#")]),t._v(" 4.3.3 累积快照事实表 (Accumulating Snapshot Fact Tables)")]),t._v(" "),a("p",[t._v("最后但同样重要的是，第三种事实表类型是累积快照。尽管它可能不像其他两种事实表类型那么常见，但累积快照能提供深刻的见解。累积快照代表具有明确开始和结束，以及一系列标准中间流程步骤的过程。当业务用户想要进行工作流或流程分析时，累积快照最为适用。\n累积快照总是有多个日期外键，代表可预测的主要事件或流程里程碑；有时还会有一个额外的日期列，指示快照行的最后更新时间。正如我们将在第 6 章 “订单管理” 中讨论的，这些日期都由角色扮演日期维度来处理。由于在首次加载事实行时，大多数这些日期是未知的，因此对于未定义的日期会使用默认的代理日期键。")]),t._v(" "),a("p",[a("strong",[t._v("里程碑之间的时间间隔和里程碑计数")])]),t._v(" "),a("p",[t._v("Lags Between Milestones and Milestone Counts")]),t._v(" "),a("p",[t._v("由于累积快照常常反映工作流或流程的效率以及所耗费的时间，事实表通常会包含代表关键里程碑之间持续时间或时间间隔的指标。使用事务事实表来回答有关持续时间的问题会很困难，因为你需要关联不同行的数据来计算时间间隔。有时，时间间隔指标仅仅是里程碑日期或时间戳之间的原始差值。在其他情况下，考虑到工作日和节假日，时间间隔的计算会变得更加复杂。")]),t._v(" "),a("p",[t._v("累积快照事实表有时会包含里程碑完成计数器，其值为0或1。最后，累积快照通常有一个指向状态维度的外键，该外键会进行更新以反映流程的最新状态。")]),t._v(" "),a("p",[a("strong",[t._v("累积快照更新和OLAP多维数据集")])]),t._v(" "),a("p",[t._v("Accumulating Snapshot Updates and OLAP Cubes")]),t._v(" "),a("p",[t._v("与其他事实表类型形成鲜明对比的是，人们会特意回访累积快照事实表的行并对其进行更新。与保留先前快照的周期快照不同，累积快照仅反映最新的状态和指标。累积快照并不试图处理不常发生的复杂场景。对这些异常情况的分析始终可以使用事务事实表来完成。")]),t._v(" "),a("p",[t._v("值得注意的是，累积快照通常不适合用于OLAP多维数据集。因为对累积快照的更新会导致事实和维度外键都发生变化，所以除非在流程实例完成后才加载事实行，否则对这些快照的更新会导致多维数据集的大部分内容需要重新处理。")]),t._v(" "),a("h3",{attrs:{id:"_4-3-4-互补的事实表类型-complementary-fact-table-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-4-互补的事实表类型-complementary-fact-table-types"}},[t._v("#")]),t._v(" 4.3.4 互补的事实表类型 (Complementary Fact Table Types)")]),t._v(" "),a("p",[t._v("有时，累积快照和周期快照会协同工作。例如，在构建每月快照时，可以通过将每天事务的影响添加到滚动的累积快照中，同时在周期快照中存储 36 个月的历史数据。理想情况下，当到达一个月的最后一天时，累积快照直接成为时间序列中新的常规月份数据，第二天再开始一个新的累积快照。\n事务和快照是维度设计的两个重要方面。配套使用事务事实表和快照事实表，能全面展示业务情况。这两种事实表都不可或缺，因为通常无法简单地将这两种不同视角整合到单个事实表中。尽管事务表和快照表之间存在一定的数据冗余，但作为数据仓库 / 商业智能（DW/BI）的构建者，不必对此感到抵触，因为使命是发布数据，以便组织能够有效地进行分析。这些不同类型的事实表从不同角度展示同一业务情况。令人惊讶的是，本书中描述的各种用例，只需要这三种事实表类型即可满足需求。")]),t._v(" "),a("h2",{attrs:{id:"_4-4-价值链整合-value-chain-integration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-价值链整合-value-chain-integration"}},[t._v("#")]),t._v(" 4.4 价值链整合 (Value Chain Integration)")]),t._v(" "),a("p",[t._v("现在我们已经完成了三种库存模型的设计，让我们回顾一下之前关于零售商价值链的讨论。企业和信息技术（IT）组织通常都对价值链整合感兴趣。企业管理层需要审视企业的各个流程，以更好地评估绩效。例如，许多数据仓库/商业智能（DW/BI）项目致力于从端到端的角度更好地理解客户行为。显然，这需要能够在不同流程（如报价、订单、发票、付款和客户服务）中一致地查看客户信息。同样，组织希望在不同流程中分析其产品、员工、学生、供应商等等。")]),t._v(" "),a("p",[t._v("IT经理们认识到，要实现数据仓库和商业智能的承诺，就需要进行整合。许多人认为管理组织的信息资产是他们的受托责任。他们知道，如果任由独立、非集成的数据库泛滥，就是没有履行自己的职责。除了满足业务需求外，IT部门也能从整合中受益，因为整合使组织能够更好地利用稀缺资源，并通过使用可重用组件提高效率。")]),t._v(" "),a("p",[t._v("幸运的是，通常对整合最感兴趣的高级管理人员也拥有必要的组织影响力和经济实力来推动整合的实现。如果他们不重视整合，那么你将面临更严峻的组织挑战，更直白地说，你的整合项目可能会失败。推动整个价值链的整合并获得组织共识不应该只是DW/BI经理的唯一责任。高级管理层的政治支持很重要，这让DW/BI经理摆脱了困境，将责任放在了高级领导层的肩上，这才是正确的做法。")]),t._v(" "),a("p",[t._v("在第3章和第4章中，我们对零售商价值链的几个流程的数据进行了建模。尽管每个流程的数据由不同维度模式中的不同事实表表示，但这些模型共享几个常见的业务维度：日期、产品和商店。我们在图4-8中逻辑地展示了这种维度共享。使用共享的通用维度对于设计可集成的维度模型绝对至关重要。")]),t._v(" "),a("div",{staticClass:"language-mermaid extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mermaid"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("graph")]),t._v(" TD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    A"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[事务事实 - 零售销售]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" B"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[促销维度]")]),t._v("\n    A "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" C"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[商店维度]")]),t._v("\n    A "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" D"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[日期维度]")]),t._v("\n    A "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" E"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[产品维度]")]),t._v("\n    F"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[零售库存 - 快照事实]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" D\n    F "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" E\n    F "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" C\n    G"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[仓库库存 - 事务事实]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" D\n    G "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" E\n    G "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" C\n    G "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" H"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[仓库维度]")]),t._v("\n")])])]),a("p",[t._v("图4-8：业务流程之间共享维度")]),t._v(" "),a("h2",{attrs:{id:"_4-5-企业数据仓库总线架构-enterprise-data-warehouse-bus-architecture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-企业数据仓库总线架构-enterprise-data-warehouse-bus-architecture"}},[t._v("#")]),t._v(" 4.5 企业数据仓库总线架构 (Enterprise Data Warehouse Bus Architecture)")]),t._v(" "),a("p",[t._v("显然，试图通过一次大规模的努力构建企业的数据仓库 / 商业智能（DW/BI）系统太过艰巨，而将其构建成孤立的部分又会违背实现一致性的首要目标。为了实现数据仓库 / 商业智能系统的长期成功，需要采用一种有架构的、渐进式的方法来构建企业数据仓库。我们所倡导的方法是企业数据仓库总线架构。")]),t._v(" "),a("h3",{attrs:{id:"_4-5-1-理解总线架构-understanding-the-bus-architecture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-1-理解总线架构-understanding-the-bus-architecture"}},[t._v("#")]),t._v(" 4.5.1 理解总线架构 (Understanding the Bus Architecture)")]),t._v(" "),a("p",[t._v("与普遍看法相反，“bus”（总线）一词并非“business”（业务）的缩写，它是一个源于电力行业的术语，如今在计算机行业也有应用。总线是一种通用结构，所有设备都连接到它，并从中获取动力。计算机中的总线是一种标准接口规范，它能让你接入磁盘驱动器、DVD或其他各种专用卡或设备。由于计算机的总线标准，这些外围设备即便由不同厂商在不同时间生产，也能协同工作并正常共存。")]),t._v(" "),a("p",[t._v("注意：通过为数据仓库/商业智能（DW/BI）环境定义标准的总线接口，不同团队可以在不同时间实施各自的维度模型。只要各个业务流程主题领域遵循该标准，它们就能相互连接并有效共存。")]),t._v(" "),a("p",[t._v("回顾图4-1中的价值链示意图，你可以想象许多业务流程接入企业数据仓库总线的情景，如图4-9所示。最终，组织价值链中的所有流程会创建一系列维度模型，这些模型共享一组全面的通用、一致性维度。")]),t._v(" "),a("div",{staticClass:"language-mermaid extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mermaid"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("graph")]),t._v(" TD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    A"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[采购订单]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" B"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[日期]")]),t._v("\n    A "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" C"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[产品]")]),t._v("\n    A "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" D"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[商店]")]),t._v("\n    A "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" E"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[促销]")]),t._v("\n    A "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" F"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[仓库]")]),t._v("\n    A "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" G"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[供应商]")]),t._v("\n    A "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" H"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[托运人]")]),t._v("\n    I"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[商店库存]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" B\n    I "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" C\n    I "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" D\n    J"),a("span",{pre:!0,attrs:{class:"token text string"}},[t._v("[商店销售]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" B\n    J "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" C\n    J "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" D\n    J "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v(" E\n")])])]),a("p",[t._v("图4-9：具有共享维度的企业数据仓库总线")]),t._v(" "),a("p",[t._v("企业数据仓库总线架构为分解企业数据仓库/商业智能规划任务提供了一种合理的方法。一套标准化的维度和事实在整个企业内具有统一的解释，这建立了数据架构框架。然后，你可以着手实施以流程为中心的独立维度模型，每个实施过程都要严格遵循该架构。当各个独立的维度模型完成后，它们就像拼图的各个部分一样组合在一起。到了某个阶段，会有足够多的维度模型，实现集成的企业数据仓库/商业智能环境的愿景。")]),t._v(" "),a("p",[t._v("总线架构独立于技术和数据库平台。只要基于一致性维度和事实进行设计，各种基于关系型和OLAP的维度模型都可以成为企业数据仓库总线的一部分。数据仓库/商业智能系统不可避免地由具有不同操作系统和数据库管理系统的独立机器组成。如果设计合理，它们会共享一致性维度和事实的通用架构，从而能够整合为一个整体。")]),t._v(" "),a("h3",{attrs:{id:"_4-5-2-企业数据仓库总线矩阵-enterprise-data-warehouse-bus-matrix"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-2-企业数据仓库总线矩阵-enterprise-data-warehouse-bus-matrix"}},[t._v("#")]),t._v(" 4.5.2 企业数据仓库总线矩阵 (Enterprise Data Warehouse Bus Matrix)")]),t._v(" "),a("p",[t._v("我们建议使用企业数据仓库总线矩阵来记录和阐释总线架构，如图4-10所示。其他人对总线矩阵有不同的称呼，如一致性矩阵或事件矩阵，但这些只是20世纪90年代首次提出的这个基本Kimball概念的代名词。")]),t._v(" "),a("p",[t._v("以表格形式呈现，组织的业务流程作为矩阵的行。务必牢记，这里识别的是业务流程，而非组织的业务部门。矩阵中的行转化为代表组织主要活动和事件的维度模型，这些通常可从其运营来源识别。在开展DW/BI开发项目时，从单个业务流程矩阵行入手，因为这样能最大程度降低承担过于宏大实施项目的风险。大多数实施风险源于ETL系统设计和开发任务过重。专注于单个流程的结果（通常由单个底层源系统捕获），可降低ETL开发风险。")]),t._v(" "),a("p",[t._v("矩阵的列代表企业范围内使用的通用维度。在填充矩阵前，创建一个核心维度列表有助于评估某个维度是否应与特定业务流程相关联。总线矩阵的行数和列数因组织而异。对许多组织而言，矩阵近似正方形，大约有25到50行，列数也大致相同。在其他行业，如保险行业，列数往往多于行数。")]),t._v(" "),a("p",[t._v("确定核心流程和维度后，对矩阵单元格进行阴影标记或打“X”，以表明哪些列与每一行相关。这样，你能立刻看清组织的一致性维度与关键业务流程之间的逻辑关系和相互作用。")]),t._v(" "),a("h3",{attrs:{id:"矩阵的多种用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#矩阵的多种用途"}},[t._v("#")]),t._v(" 矩阵的多种用途")]),t._v(" "),a("p",[t._v("创建企业数据仓库总线矩阵是数据仓库/商业智能（DW/BI）实施过程中最重要的成果之一。它是一种多功能的资源，具有多种用途，包括架构规划、数据库设计、数据治理协调、项目估算以及组织沟通等方面。")]),t._v(" "),a("p",[t._v("虽然排列矩阵的行和列相对简单，但企业总线矩阵却定义了整个DW/BI系统的数据架构。无论数据库或技术偏好如何，该矩阵都能提供一个全局视角。矩阵的列直接满足了主数据管理和数据集成的需求。当肩负数据治理职责的人员定义那些会参与多个维度模型的核心维度，并且由DW/BI团队构建这些维度时，你就可以设想它们在不同流程中的应用情况，而不是在孤立的环境中，仅基于单个流程甚至单个部门的需求来进行设计。共享维度提供了强大的集成纽带，使得业务人员能够跨流程进行深入分析。")]),t._v(" "),a("p",[t._v("每个以业务流程为核心的实施项目都在逐步构建整体架构。多个开发团队可以独立、异步地处理矩阵的各个组成部分，并且可以确信这些部分最终能够组合在一起。项目经理只需查看流程行，就能一眼看清每个维度模型所涉及的维度。在评估项目工作量时，这种视角非常有帮助。专注于维度较少的业务流程的项目，通常所需的工作量也较少，尤其是在那些涉及敏感业务的维度已经准备就绪的情况下。")]),t._v(" "),a("p",[t._v("该矩阵使您能够在数据治理团队和数据仓库 / 商业智能（DW/BI）团队内部以及团队之间进行有效的沟通。更为重要的是，您可以利用该矩阵在整个组织内进行向上和向外的沟通。该矩阵是一个简洁的可交付成果，能够直观地传达总体规划。IT 管理层需要理解这一视角，以便在各项目团队之间进行协调，并抵制组织内快速部署更多部门级解决方案的冲动。IT 管理层还必须确保分布式的 DW/BI 开发团队致力于遵循总线架构。业务管理层也需要理解这一整体规划；您希望他们了解按业务流程逐步推进 DW/BI 系统部署的阶段安排。此外，该矩阵还阐明了从业务部门中确定专家担任通用维度数据治理负责人的重要性。该矩阵能够有效地与开发人员、架构师、建模师、项目经理以及高级 IT 和业务管理人员进行沟通，这充分体现了它简洁性的优势。")]),t._v(" "),a("p",[t._v("机会/利益相关者矩阵\nOpportunity/Stakeholder Matrix")]),t._v(" "),a("p",[t._v("你可以草拟一个不同的矩阵，沿用相同的业务流程行，但将维度列替换为业务职能，比如商品采购、市场营销、门店运营以及财务等。根据每个职能部门的需求，对矩阵单元格进行标注（涂色），以表明哪些业务职能部门对哪些业务流程（以及项目）感兴趣，如图4-11所示的机会/利益相关者矩阵变体所示。该矩阵还能确定，在以流程为中心的某一行被列为项目之后，需要邀请哪些团队参与详细需求分析、维度建模以及商业智能（BI）应用规范制定等工作。")]),t._v(" "),a("p",[t._v("常见的总线矩阵错误\nCommon Bus Matrix Mistakes")]),t._v(" "),a("p",[t._v("在构建企业数据仓库总线矩阵时，存在一些常见的错误，需要尽力避免。这些错误可能会破坏矩阵作为规划和沟通工具的有效性，甚至可能对整个数据仓库/商业智能（DW/BI）项目的成功产生负面影响。")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("业务流程定义不当")]),t._v("：其中一个主要错误是对业务流程的定义不准确或过于宽泛。业务流程应该是清晰、可识别的组织活动，具有明确的输入、输出和一系列连贯的步骤。如果业务流程定义不明确，那么矩阵的行就会缺乏意义，并且难以确定哪些维度与它们相关。例如，将“客户管理”定义为一个业务流程过于笼统，因为它可能涵盖了客户获取、客户服务、客户细分等多个不同的活动。更好的做法是将这些子活动定义为单独的业务流程，以便更精确地映射维度和理解业务需求。")]),t._v(" "),a("li",[a("strong",[t._v("维度选择错误")]),t._v("：选择错误的维度或遗漏重要维度也是一个常见问题。维度应该是业务中稳定且有意义的属性，用于描述和分析业务流程。有时，团队可能会专注于技术或运营细节，而忽略了对业务用户至关重要的业务维度。例如，在零售业务中，忽略了“季节”维度，这可能会影响对销售数据的分析，因为销售业绩通常会受到季节因素的显著影响。此外，未能识别共享维度，导致在不同的业务流程中重复定义相似的维度，会破坏数据的一致性和整合性。")]),t._v(" "),a("li",[a("strong",[t._v("缺乏数据治理参与")]),t._v("：在构建总线矩阵时，如果没有数据治理团队的充分参与，可能会导致严重的问题。数据治理团队负责定义和维护数据标准、数据质量和数据所有权。如果他们没有参与到矩阵的创建过程中，那么矩阵中定义的维度和业务流程可能无法反映数据治理的要求。例如，数据治理团队可能会规定某些维度的数据来源和更新频率，如果在矩阵中没有考虑这些因素，那么在实施数据仓库时可能会出现数据不一致和质量问题。")]),t._v(" "),a("li",[a("strong",[t._v("忽视业务用户需求")]),t._v("：另一个常见错误是在构建矩阵时忽视了业务用户的需求。总线矩阵应该是一个满足业务用户分析和决策需求的工具。如果在构建过程中没有与业务用户充分沟通，那么矩阵可能无法提供他们所需的信息。例如，业务用户可能需要对特定业务流程进行详细的时间序列分析，但矩阵中没有包含相应的时间维度或事实。因此，在构建矩阵时，与业务用户进行密切的合作和沟通，确保矩阵能够满足他们的实际需求是非常重要的。")]),t._v(" "),a("li",[a("strong",[t._v("矩阵更新不及时")]),t._v("：企业的业务环境是不断变化的，新的业务流程可能会出现，现有的业务流程可能会发生改变，业务需求也可能会随着时间而演变。如果总线矩阵不能及时更新以反映这些变化，那么它将逐渐失去其作为规划和沟通工具的价值。例如，如果企业推出了新的产品线，那么矩阵中应该添加相应的维度和业务流程，以确保能够对新产品的销售和运营进行有效的分析。")])]),t._v(" "),a("p",[t._v("通过避免这些常见的错误，可以构建一个更准确、更有用的企业数据仓库总线矩阵，为数据仓库/商业智能项目的成功奠定坚实的基础。这个矩阵将成为一个有效的规划工具，帮助组织协调不同项目团队的工作，确保数据的一致性和整合性，并满足业务用户的分析和决策需求。")]),t._v(" "),a("p",[t._v("将现有模型适配到总线矩阵中\nRetrofitting Existing Models to a Bus Matrix\n在许多情况下，组织已经拥有一些现有的数据模型，可能是部门级的数据集市、遗留的数据库系统，或者是早期尝试构建的数据仓库模型。当决定采用企业数据仓库总线架构时，面临的挑战之一就是如何将这些现有的模型适配到新的总线矩阵中。")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("评估现有模型")]),t._v("：首先要对现有的数据模型进行全面的评估。这包括理解每个模型所涵盖的业务流程、使用的维度和事实，以及数据的来源和质量。分析现有模型与业务流程的对应关系，确定哪些业务流程已经在模型中得到了体现，哪些还需要补充。例如，某个部门级的数据集市可能只关注销售业务流程，而忽略了库存管理和采购等其他重要流程。同时，检查维度的定义和一致性，看看是否存在相同维度在不同模型中有不同定义的情况。")]),t._v(" "),a("li",[a("strong",[t._v("映射到总线矩阵")]),t._v("：根据对现有模型的评估，将其映射到企业数据仓库总线矩阵中。确定每个现有模型对应的业务流程行和维度列。对于已经存在于总线矩阵中的业务流程和维度，检查现有模型中的数据是否与总线矩阵的定义一致。如果不一致，需要进行调整和协调。例如，如果现有模型中“产品”维度的定义与总线矩阵中“产品”维度的定义存在差异，需要决定以哪个为准，并对数据进行相应的转换。对于现有模型中存在但总线矩阵中未包含的维度或业务流程，需要考虑是否将其纳入总线矩阵，以及如何与其他部分进行整合。")]),t._v(" "),a("li",[a("strong",[t._v("数据整合和转换")]),t._v("：在将现有模型映射到总线矩阵后，通常需要进行数据整合和转换工作。这可能涉及从不同的数据源提取数据，清洗和转换数据以符合总线矩阵的标准和规范，然后将数据加载到新的数据仓库或数据集市中。例如，如果现有模型中的数据存储在不同的数据库系统中，并且数据格式和编码方式不一致，需要进行数据清洗和转换，以确保数据的一致性和准确性。同时，可能还需要处理数据的粒度问题，确保数据在不同模型之间的粒度匹配。")]),t._v(" "),a("li",[a("strong",[t._v("建立数据治理机制")]),t._v("：为了确保现有模型适配到总线矩阵后的长期稳定性和数据质量，建立有效的数据治理机制是非常重要的。数据治理机制应该包括数据标准的制定和维护、数据质量的监控和改进、数据所有权的明确和管理等方面。例如，明确每个维度和事实的数据所有者，由他们负责数据的准确性和完整性。同时，建立数据质量监控指标和流程，定期对数据进行检查和评估，及时发现和解决数据质量问题。")]),t._v(" "),a("li",[a("strong",[t._v("逐步迁移和测试")]),t._v("：在进行现有模型适配时，建议采用逐步迁移的方式，而不是一次性将所有数据和模型都迁移到新的总线矩阵架构中。这样可以降低风险，便于及时发现和解决问题。在每个阶段，都要进行充分的测试，包括功能测试、性能测试和数据质量测试等。确保新的模型和数据能够满足业务用户的需求，并且与其他部分的系统和数据能够正常交互。")])]),t._v(" "),a("p",[t._v("将现有模型适配到总线矩阵中是一个复杂的过程，需要全面的评估、细致的映射、有效的数据整合和转换、完善的数据治理机制以及逐步的迁移和测试。通过合理的规划和执行，可以成功地将现有模型纳入到企业数据仓库总线架构中，实现数据的一致性和整合性，为企业的决策提供更有力的支持。")]),t._v(" "),a("h2",{attrs:{id:"_4-6-一致性维度-conformed-dimensions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-一致性维度-conformed-dimensions"}},[t._v("#")]),t._v(" 4.6 一致性维度 (Conformed Dimensions)")]),t._v(" "),a("h3",{attrs:{id:"_4-6-1-跨事实表钻取-drilling-across-fact-tables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-1-跨事实表钻取-drilling-across-fact-tables"}},[t._v("#")]),t._v(" 4.6.1 跨事实表钻取 (Drilling Across Fact Tables)")]),t._v(" "),a("h3",{attrs:{id:"_4-6-2-完全一致的一致性维度-identical-conformed-dimensions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-2-完全一致的一致性维度-identical-conformed-dimensions"}},[t._v("#")]),t._v(" 4.6.2 完全一致的一致性维度 (Identical Conformed Dimensions)")]),t._v(" "),a("h3",{attrs:{id:"_4-6-3-具有属性子集的收缩汇总一致性维度-shrunken-rollup-conformed-dimension-with-attribute-subset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-3-具有属性子集的收缩汇总一致性维度-shrunken-rollup-conformed-dimension-with-attribute-subset"}},[t._v("#")]),t._v(" 4.6.3 具有属性子集的收缩汇总一致性维度 (Shrunken Rollup Conformed Dimension with Attribute Subset)")]),t._v(" "),a("h3",{attrs:{id:"_4-6-4-具有行子集的收缩一致性维度-shrunken-conformed-dimension-with-row-subset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-4-具有行子集的收缩一致性维度-shrunken-conformed-dimension-with-row-subset"}},[t._v("#")]),t._v(" 4.6.4 具有行子集的收缩一致性维度 (Shrunken Conformed Dimension with Row Subset)")]),t._v(" "),a("h3",{attrs:{id:"_4-6-5-总线矩阵上的收缩一致性维度-shrunken-conformed-dimensions-on-the-bus-matrix"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-5-总线矩阵上的收缩一致性维度-shrunken-conformed-dimensions-on-the-bus-matrix"}},[t._v("#")]),t._v(" 4.6.5 总线矩阵上的收缩一致性维度 (Shrunken Conformed Dimensions on the Bus Matrix)")]),t._v(" "),a("h3",{attrs:{id:"_4-6-6-有限的一致性-limited-conformity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-6-有限的一致性-limited-conformity"}},[t._v("#")]),t._v(" 4.6.6 有限的一致性 (Limited Conformity)")]),t._v(" "),a("h3",{attrs:{id:"_4-6-7-数据治理与数据管理的重要性-importance-of-data-governance-and-stewardship"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-7-数据治理与数据管理的重要性-importance-of-data-governance-and-stewardship"}},[t._v("#")]),t._v(" 4.6.7 数据治理与数据管理的重要性 (Importance of Data Governance and Stewardship)")]),t._v(" "),a("h3",{attrs:{id:"_4-6-8-一致性维度与敏捷运动-conformed-dimensions-and-the-agile-movement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-8-一致性维度与敏捷运动-conformed-dimensions-and-the-agile-movement"}},[t._v("#")]),t._v(" 4.6.8 一致性维度与敏捷运动 (Conformed Dimensions and the Agile Movement)")]),t._v(" "),a("h2",{attrs:{id:"_4-7-一致性事实-conformed-facts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-一致性事实-conformed-facts"}},[t._v("#")]),t._v(" 4.7 一致性事实 (Conformed Facts)")]),t._v(" "),a("h2",{attrs:{id:"_4-8-总结-summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-总结-summary"}},[t._v("#")]),t._v(" 4.8 总结 (Summary)")]),t._v(" "),a("p",[a("a",{attrs:{href:"%E6%B3%A8%E9%87%8A"}},[t._v("^4.2.2-1")]),t._v(":")])])}),[],!1,null,null,null);a.default=e.exports}}]);